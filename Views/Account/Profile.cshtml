@model ProfileViewModel
@{
    ViewData["Title"] = "My Profile - ABC Car Traders";
    Layout = Context.Session.IsAdmin() ? "_AdminLayout" : "_CustomerLayout";
    
    var breadcrumbs = new List<dynamic>
    {
        new { Title = "Profile", IsActive = true }
    };
    ViewData["BreadcrumbItems"] = breadcrumbs;
}

<div class="profile-container">
    <div class="row">
        <div class="col-md-4 col-lg-3">
            <!-- Profile Sidebar -->
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <!-- Profile Picture -->
                    <div class="profile-picture mb-3">
                        @if (!string.IsNullOrEmpty(Model?.ProfileImageUrl))
                        {
                            <img src="@Model.ProfileImageUrl" alt="Profile Picture" class="rounded-circle" width="120" height="120">
                        }
                        else
                        {
                            <div class="profile-placeholder rounded-circle bg-primary text-white d-flex align-items-center justify-content-center" 
                                 style="width: 120px; height: 120px; margin: 0 auto;">
                                <i class="fas fa-user fa-3x"></i>
                            </div>
                        }
                        <div class="mt-2">
                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="changeProfilePicture()">
                                <i class="fas fa-camera me-1"></i>Change Photo
                            </button>
                        </div>
                    </div>
                    
                    <!-- Basic Info -->
                    <h5 class="mb-1">@Model?.FirstName @Model?.LastName</h5>
                    <p class="text-muted mb-2">@Model?.Email</p>
                    <span class="badge bg-@(Context.Session.IsAdmin() ? "warning" : "primary") mb-3">
                        @Context.Session.GetString("UserType")
                    </span>
                    
                    <!-- Quick Stats -->
                    @if (Context.Session.IsCustomer())
                    {
                        <div class="quick-stats">
                            <div class="row text-center">
                                <div class="col-6">
                                    <div class="stat-item">
                                        <div class="stat-number text-primary">@(ViewBag.TotalOrders ?? 0)</div>
                                        <small class="text-muted">Orders</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="stat-item">
                                        <div class="stat-number text-success">@(ViewBag.WishlistCount ?? 0)</div>
                                        <small class="text-muted">Wishlist</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <!-- Account Actions -->
            <div class="card shadow-sm mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-cog me-2"></i>Account Actions
                    </h6>
                </div>
                <div class="list-group list-group-flush">
                    <a href="@Url.Action("ChangePassword", "Account")" class="list-group-item list-group-item-action">
                        <i class="fas fa-key me-2 text-warning"></i>Change Password
                    </a>
                    @if (Context.Session.IsCustomer())
                    {
                        <a href="@Url.Action("MyOrders", "Customer")" class="list-group-item list-group-item-action">
                            <i class="fas fa-shopping-bag me-2 text-info"></i>My Orders
                        </a>
                        <a href="@Url.Action("Wishlist", "Customer")" class="list-group-item list-group-item-action">
                            <i class="fas fa-heart me-2 text-danger"></i>My Wishlist
                        </a>
                    }
                    <a href="#" class="list-group-item list-group-item-action" onclick="exportData()">
                        <i class="fas fa-download me-2 text-success"></i>Export My Data
                    </a>
                    <a href="#" class="list-group-item list-group-item-action text-danger" onclick="confirmAccountDeletion()">
                        <i class="fas fa-trash me-2"></i>Delete Account
                    </a>
                </div>
            </div>
        </div>
        
        <div class="col-md-8 col-lg-9">
            <!-- Profile Form -->
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-user-edit me-2"></i>Profile Information
                    </h5>
                </div>
                <div class="card-body">
                    
                    <!-- Success/Error Messages -->
                    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model?.ErrorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>
                            @Model.ErrorMessage
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    <form asp-action="UpdateProfile" asp-controller="Account" method="post" class="profile-form" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        
                        <!-- Personal Information -->
                        <div class="section-header mb-3">
                            <h6 class="text-primary">
                                <i class="fas fa-user me-2"></i>Personal Information
                            </h6>
                            <hr>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="FirstName" class="form-label">First Name *</label>
                                <input asp-for="FirstName" class="form-control" placeholder="Enter first name" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="LastName" class="form-label">Last Name *</label>
                                <input asp-for="LastName" class="form-control" placeholder="Enter last name" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Email" class="form-label">Email Address</label>
                                <input asp-for="Email" class="form-control" readonly title="Email cannot be changed" />
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Contact support to change your email address
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                                <input asp-for="PhoneNumber" class="form-control" placeholder="Enter phone number" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <!-- Address Information -->
                        <div class="section-header mb-3 mt-4">
                            <h6 class="text-primary">
                                <i class="fas fa-map-marker-alt me-2"></i>Address Information
                            </h6>
                            <hr>
                        </div>
                        
                        <div class="form-group mb-3">
                            <label asp-for="Address" class="form-label">Street Address</label>
                            <textarea asp-for="Address" class="form-control" rows="2" placeholder="Enter your full address"></textarea>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="City" class="form-label">City</label>
                                <input asp-for="City" class="form-control" placeholder="Enter city" />
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Country" class="form-label">Country</label>
                                <select asp-for="Country" class="form-select">
                                    <option value="">Select Country</option>
                                    <option value="Sri Lanka">Sri Lanka</option>
                                    <option value="India">India</option>
                                    <option value="Bangladesh">Bangladesh</option>
                                    <option value="Pakistan">Pakistan</option>
                                    <option value="Other">Other</option>
                                </select>
                                <span asp-validation-for="Country" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <!-- Preferences -->
                        <div class="section-header mb-3 mt-4">
                            <h6 class="text-primary">
                                <i class="fas fa-cog me-2"></i>Preferences
                            </h6>
                            <hr>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-check form-switch">
                                    @* <input asp-for="EmailNotifications" class="form-check-input" /> *@
                                    @* <label asp-for="EmailNotifications" class="form-check-label"> *@
                                        Email Notifications
                                    </label>
                                </div>
                                <div class="form-text">Receive order updates and promotional emails</div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-check form-switch">
                                    @* <input asp-for="SmsNotifications" class="form-check-input" /> *@
                                    @* <label asp-for="SmsNotifications" class="form-check-label"> *@
                                        SMS Notifications
                                    </label>
                                </div>
                                <div class="form-text">Receive important updates via SMS</div>
                            </div>
                        </div>
                        
                        <!-- Profile Picture Upload (Hidden Input) -->
                        <input type="file" id="profilePictureInput" name="ProfilePicture" accept="image/*" style="display: none;" onchange="previewProfilePicture(this)" />
                        
                        <!-- Action Buttons -->
                        <div class="form-actions mt-4">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <button type="submit" class="btn btn-primary me-2 save-btn">
                                        <i class="fas fa-save me-1"></i>
                                        <span class="btn-text">Save Changes</span>
                                        <span class="btn-loading" style="display: none;">
                                            <i class="fas fa-spinner fa-spin me-1"></i>Saving...
                                        </span>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                        <i class="fas fa-undo me-1"></i>Reset
                                    </button>
                                </div>
                                <div>
                                    <small class="text-muted">
                                        <i class="fas fa-clock me-1"></i>
                                        Last updated: @(Model?.UpdatedAt.ToString("MMM dd, yyyy") ?? "Never")
                                    </small>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Account Statistics -->
            @if (Context.Session.IsCustomer())
            {
                <div class="card shadow-sm mt-3">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-chart-bar me-2"></i>Account Activity
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6 col-md-3">
                                <div class="stat-card text-center p-3 border rounded">
                                    <div class="stat-number h4 text-primary mb-1">@(ViewBag.TotalOrders ?? 0)</div>
                                    <small class="text-muted">Total Orders</small>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-card text-center p-3 border rounded">
                                    <div class="stat-number h4 text-success mb-1">@(ViewBag.TotalSpent?.ToString("C") ?? "LKR 0")</div>
                                    <small class="text-muted">Total Spent</small>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-card text-center p-3 border rounded">
                                    <div class="stat-number h4 text-info mb-1">@(ViewBag.WishlistCount ?? 0)</div>
                                    <small class="text-muted">Wishlist Items</small>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-card text-center p-3 border rounded">
                                    <div class="stat-number h4 text-warning mb-1">@(ViewBag.AccountAge ?? 0)</div>
                                    <small class="text-muted">Days Active</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .profile-container {
        padding: 1rem 0;
    }
    
    .profile-placeholder {
        font-size: 2rem;
    }
    
    .quick-stats .stat-item {
        padding: 0.5rem;
    }
    
    .stat-number {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 0.25rem;
    }
    
    .section-header h6 {
        margin-bottom: 0.5rem;
    }
    
    .section-header hr {
        margin-top: 0;
        margin-bottom: 1rem;
    }
    
    .form-control:read-only {
        background-color: #f8f9fa;
        opacity: 1;
    }
    
    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    
    .stat-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .list-group-item-action:hover {
        background-color: #f8f9fa;
        transform: translateX(5px);
        transition: all 0.2s ease;
    }
    
    .save-btn.loading {
        pointer-events: none;
    }
    
    /* Mobile responsive */
    @@media (max-width: 768px) {
        .profile-container {
            padding: 0.5rem 0;
        }
        
        .stat-card {
            margin-bottom: 1rem;
        }
        
        .form-actions {
            text-align: center;
        }
        
        .form-actions .d-flex {
            flex-direction: column;
            gap: 1rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.profile-form');
        const saveBtn = document.querySelector('.save-btn');
        const btnText = document.querySelector('.btn-text');
        const btnLoading = document.querySelector('.btn-loading');
        
        // Form submission handling
        form.addEventListener('submit', function(e) {
            saveBtn.classList.add('loading');
            btnText.style.display = 'none';
            btnLoading.style.display = 'inline';
        });
        
        // Track form changes
        const originalFormData = new FormData(form);
        let isFormDirty = false;
        
        form.addEventListener('input', function() {
            isFormDirty = true;
        });
        
        // Warn before leaving if form is dirty
        window.addEventListener('beforeunload', function(e) {
            if (isFormDirty) {
                e.preventDefault();
                e.returnValue = '';
            }
        });
        
        // Reset dirty flag on successful save
        if (document.querySelector('.alert-success')) {
            isFormDirty = false;
        }
    });
    
    function changeProfilePicture() {
        document.getElementById('profilePictureInput').click();
    }
    
    function previewProfilePicture(input) {
        if (input.files && input.files[0]) {
            const reader = new FileReader();
            
            reader.onload = function(e) {
                const profileImg = document.querySelector('.profile-picture img');
                const profilePlaceholder = document.querySelector('.profile-placeholder');
                
                if (profileImg) {
                    profileImg.src = e.target.result;
                } else if (profilePlaceholder) {
                    profilePlaceholder.innerHTML = `<img src="${e.target.result}" alt="Profile Picture" class="rounded-circle" width="120" height="120">`;
                }
            };
            
            reader.readAsDataURL(input.files[0]);
        }
    }
    
    function resetForm() {
        if (confirm('Are you sure you want to reset all changes?')) {
            location.reload();
        }
    }
    
    function exportData() {
        if (confirm('This will download your account data. Continue?')) {
            window.location.href = '@Url.Action("ExportData", "Account")';
        }
    }
    
    function confirmAccountDeletion() {
        const modal = `
            <div class="modal fade" id="deleteAccountModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title">Delete Account</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>Warning:</strong> This action cannot be undone!
                            </div>
                            <p>Deleting your account will:</p>
                            <ul>
                                <li>Permanently delete your profile information</li>
                                <li>Remove your order history</li>
                                <li>Clear your wishlist</li>
                                <li>Cancel any pending orders</li>
                            </ul>
                            <p>Type <strong>DELETE</strong> to confirm:</p>
                            <input type="text" id="deleteConfirmation" class="form-control" placeholder="Type DELETE">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" onclick="deleteAccount()" disabled id="confirmDeleteBtn">
                                <i class="fas fa-trash me-1"></i>Delete Account
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modal);
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteAccountModal'));
        deleteModal.show();
        
        // Enable delete button only when "DELETE" is typed
        document.getElementById('deleteConfirmation').addEventListener('input', function() {
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            confirmBtn.disabled = this.value !== 'DELETE';
        });
        
        // Remove modal from DOM when hidden
        document.getElementById('deleteAccountModal').addEventListener('hidden.bs.modal', function() {
            this.remove();
        });
    }
    
    function deleteAccount() {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '@Url.Action("DeleteAccount", "Account")';
        
        const token = document.createElement('input');
        token.type = 'hidden';
        token.name = '__RequestVerificationToken';
        token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
        
        form.appendChild(token);
        document.body.appendChild(form);
        form.submit();
    }
    
    // Auto-save draft
    let autoSaveTimer;
    document.querySelector('.profile-form').addEventListener('input', function() {
        clearTimeout(autoSaveTimer);
        autoSaveTimer = setTimeout(() => {
            saveDraft();
        }, 2000);
    });
    
    function saveDraft() {
        const formData = new FormData(document.querySelector('.profile-form'));
        localStorage.setItem('profileDraft', JSON.stringify(Object.fromEntries(formData)));
        
        // Show brief indicator
        const indicator = document.createElement('div');
        indicator.className = 'position-fixed bottom-0 end-0 m-3 alert alert-info alert-dismissible';
        indicator.innerHTML = '<small><i class="fas fa-save me-1"></i>Draft saved</small>';
        document.body.appendChild(indicator);
        
        setTimeout(() => indicator.remove(), 2000);
    }
    
    // Load draft on page load
    function loadDraft() {
        const draft = localStorage.getItem('profileDraft');
        if (draft) {
            const data = JSON.parse(draft);
            Object.keys(data).forEach(key => {
                const field = document.querySelector(`[name="${key}"]`);
                if (field && field.type !== 'hidden') {
                    field.value = data[key];
                }
            });
        }
    }
    
    // Clear draft on successful save
    if (document.querySelector('.alert-success')) {
        localStorage.removeItem('profileDraft');
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}