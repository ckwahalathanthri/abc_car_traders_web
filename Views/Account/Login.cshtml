@model LoginViewModel
@{
    ViewData["Title"] = "Login - ABC Car Traders";
    Layout = "_Layout";
}

<div class="login-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                
                <!-- Login Card -->
                <div class="card shadow-lg border-0">
                    <div class="card-header bg-primary text-white text-center py-4">
                        <div class="login-header">
                            <i class="fas fa-car fa-2x mb-2"></i>
                            <h4 class="mb-0">ABC Car Traders</h4>
                            <p class="mb-0 opacity-75">Welcome Back</p>
                        </div>
                    </div>
                    
                    <div class="card-body p-4">
                        
                        <!-- Error Message -->
                        @if (!string.IsNullOrEmpty(Model?.ErrorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                @Model.ErrorMessage
                            </div>
                        }
                        
                        <!-- Success Message -->
                        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
                        {
                            <div class="alert alert-success" role="alert">
                                <i class="fas fa-check-circle me-2"></i>
                                @TempData["SuccessMessage"]
                            </div>
                        }
                        
                        <!-- Login Form -->
                        <form asp-action="Login" asp-controller="Account" method="post" class="login-form" novalidate>
                            <input type="hidden" asp-for="ReturnUrl" />
                            @Html.AntiForgeryToken()
                            
                            <!-- Email Field -->
                            <div class="form-group mb-3">
                                <label asp-for="Email" class="form-label">
                                    <i class="fas fa-envelope me-1"></i>Email Address
                                </label>
                                <input asp-for="Email" class="form-control form-control-lg" 
                                       placeholder="Enter your email address" 
                                       autocomplete="email" autofocus />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            
                            <!-- Password Field -->
                            <div class="form-group mb-3">
                                <label asp-for="Password" class="form-label">
                                    <i class="fas fa-lock me-1"></i>Password
                                </label>
                                <div class="input-group">
                                    <input asp-for="Password" class="form-control form-control-lg" 
                                           placeholder="Enter your password" 
                                           autocomplete="current-password" />
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword()">
                                        <i class="fas fa-eye" id="toggleIcon"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            
                            <!-- Remember Me & Forgot Password -->
                            <div class="row mb-3">
                                <div class="col-6">
                                    <div class="form-check">
                                        <input asp-for="RememberMe" class="form-check-input" />
                                        <label asp-for="RememberMe" class="form-check-label">
                                            Remember me
                                        </label>
                                    </div>
                                </div>
                                <div class="col-6 text-end">
                                    <a href="@Url.Action("ForgotPassword", "Account")" class="text-decoration-none">
                                        Forgot password?
                                    </a>
                                </div>
                            </div>
                            
                            <!-- Login Button -->
                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary btn-lg login-btn">
                                    <i class="fas fa-sign-in-alt me-2"></i>
                                    <span class="btn-text">Sign In</span>
                                    <span class="btn-loading" style="display: none;">
                                        <i class="fas fa-spinner fa-spin me-2"></i>Signing In...
                                    </span>
                                </button>
                            </div>
                            
                            <!-- Demo Accounts -->
                            <div class="demo-accounts mb-3">
                                <hr>
                                <p class="text-center text-muted mb-2">
                                    <small>Demo Accounts (for testing)</small>
                                </p>
                                <div class="row">
                                    <div class="col-6">
                                        <button type="button" class="btn btn-outline-secondary btn-sm w-100" 
                                                onclick="fillDemoCredentials('admin@abccartraders.com', 'admin123')">
                                            <i class="fas fa-user-shield me-1"></i>Admin
                                        </button>
                                    </div>
                                    <div class="col-6">
                                        <button type="button" class="btn btn-outline-info btn-sm w-100" 
                                                onclick="fillDemoCredentials('customer@demo.com', 'customer123')">
                                            <i class="fas fa-user me-1"></i>Customer
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        
                        <!-- Register Link -->
                        <div class="text-center">
                            <hr>
                            <p class="mb-0">
                                Don't have an account? 
                                <a href="@Url.Action("Register", "Account")" class="text-decoration-none fw-bold">
                                    Create Account
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
                
                <!-- Additional Info -->
                <div class="text-center mt-4">
                    <p class="text-muted">
                        <small>
                            <i class="fas fa-shield-alt me-1"></i>
                            Your information is secure and protected
                        </small>
                    </p>
                    <p class="text-muted">
                        <small>
                            Need help? <a href="@Url.Action("Contact", "Home")" class="text-decoration-none">Contact Support</a>
                        </small>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .login-container {
        min-height: calc(100vh - 76px);
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        padding: 2rem 0;
    }
    
    .login-header i {
        color: rgba(255,255,255,0.9);
    }
    
    .card {
        border-radius: 1rem;
        overflow: hidden;
    }
    
    .card-header {
        border-bottom: none;
        background: linear-gradient(45deg, #007bff, #0056b3) !important;
    }
    
    .form-control {
        border-radius: 0.5rem;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
    }
    
    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }
    
    .login-btn {
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }
    
    .login-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(0,123,255,0.3);
    }
    
    .login-btn.loading {
        pointer-events: none;
    }
    
    .demo-accounts .btn {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
    }
    
    .form-check-input:checked {
        background-color: #007bff;
        border-color: #007bff;
    }
    
    /* Animation */
    .card {
        animation: slideInUp 0.6s ease-out;
    }
    
    @@keyframes slideInUp {
        from {
            transform: translateY(30px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }
    
    /* Mobile responsive */
    @@media (max-width: 576px) {
        .login-container {
            padding: 1rem 0;
        }
        
        .card-body {
            padding: 1.5rem !important;
        }
        
        .demo-accounts .btn {
            margin-bottom: 0.5rem;
        }
    }
    
    /* Loading animation */
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.login-form');
        const submitBtn = document.querySelector('.login-btn');
        const btnText = document.querySelector('.btn-text');
        const btnLoading = document.querySelector('.btn-loading');
        
        // Form submission handling
        form.addEventListener('submit', function(e) {
            submitBtn.classList.add('loading');
            btnText.style.display = 'none';
            btnLoading.style.display = 'inline';
        });
        
        // Reset button state if validation fails
        if (document.querySelector('.text-danger')) {
            submitBtn.classList.remove('loading');
            btnText.style.display = 'inline';
            btnLoading.style.display = 'none';
        }
        
        // Auto-focus email field if empty
        const emailField = document.getElementById('Email');
        if (emailField && !emailField.value) {
            emailField.focus();
        }
        
        // Enter key handling
        document.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                form.submit();
            }
        });
    });
    
    function togglePassword() {
        const passwordField = document.getElementById('Password');
        const toggleIcon = document.getElementById('toggleIcon');
        
        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            toggleIcon.classList.remove('fa-eye');
            toggleIcon.classList.add('fa-eye-slash');
        } else {
            passwordField.type = 'password';
            toggleIcon.classList.remove('fa-eye-slash');
            toggleIcon.classList.add('fa-eye');
        }
    }
    
    function fillDemoCredentials(email, password) {
        document.getElementById('Email').value = email;
        document.getElementById('Password').value = password;
        
        // Add visual feedback
        const btn = event.target.closest('button');
        const originalText = btn.innerHTML;
        btn.innerHTML = '<i class="fas fa-check me-1"></i>Filled';
        btn.classList.add('btn-success');
        
        setTimeout(() => {
            btn.innerHTML = originalText;
            btn.classList.remove('btn-success');
        }, 1500);
    }
    
    // Auto-clear error messages after 5 seconds
    setTimeout(() => {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            if (alert.classList.contains('alert-danger')) {
                alert.style.transition = 'opacity 0.5s ease';
                alert.style.opacity = '0';
                setTimeout(() => alert.remove(), 500);
            }
        });
    }, 5000);
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}