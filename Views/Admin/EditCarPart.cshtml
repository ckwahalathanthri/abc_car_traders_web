@model ABCCarTraders.Models.ViewModels.CarPartViewModel
@{
    ViewData["Title"] = "Edit Car Part";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Success/Error Messages -->
<div id="messageContainer" style="display: none;">
    <div id="alertMessage" class="alert alert-dismissible fade show" role="alert">
        <i id="alertIcon" class="me-2"></i>
        <span id="alertText"></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
</div>

<div class="edit-car-part-container">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 text-dark fw-bold">
                        <i class="fas fa-edit me-2 text-primary"></i>Edit Car Part
                    </h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Dashboard", "Admin")" class="text-decoration-none">
                                    <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("ManageCarParts", "Admin")" class="text-decoration-none">
                                    <i class="fas fa-cogs me-1"></i>Manage Parts
                                </a>
                            </li>
                            <li class="breadcrumb-item active">Edit @Model.PartName</li>
                        </ol>
                    </nav>
                </div>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Details", "CarParts", new { id = Model.CarPartId })"
                       class="btn btn-outline-info" target="_blank">
                        <i class="fas fa-external-link-alt me-1"></i>View Live
                    </a>
                    <a href="@Url.Action("ManageCarParts", "Admin")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to Parts
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Car Part Info Alert -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="alert alert-info d-flex align-items-center">
                <i class="fas fa-info-circle me-2"></i>
                <div>
                    <strong>Part ID:</strong> #@Model.CarPartId
                    | <strong>Part Number:</strong> @Model.PartNumber
                    | <strong>Current Stock:</strong> @Model.StockQuantity units
                    | <strong>Status:</strong> @(Model.IsAvailable ? "Available" : "Not Available")
                </div>
            </div>
        </div>
    </div>

    <form id="editCarPartForm">
        @Html.AntiForgeryToken()
        <input type="hidden" id="CarPartId" name="CarPartId" value="@Model.CarPartId">

        <div class="row">
            <!-- Main Form -->
            <div class="col-lg-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0">
                        <h6 class="card-title fw-bold mb-0">
                            <i class="fas fa-info-circle me-2 text-primary"></i>Part Information
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <!-- Part Name -->
                            <div class="col-md-8">
                                <label for="PartName" class="form-label fw-semibold">
                                    <i class="fas fa-cogs me-1"></i>Part Name *
                                </label>
                                <input id="PartName" name="PartName" type="text" class="form-control"
                                       value="@Model.PartName" required>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Part Number -->
                            <div class="col-md-4">
                                <label for="PartNumber" class="form-label fw-semibold">
                                    <i class="fas fa-barcode me-1"></i>Part Number *
                                </label>
                                <input id="PartNumber" name="PartNumber" type="text" class="form-control"
                                       value="@Model.PartNumber" required readonly>
                                <div class="invalid-feedback"></div>
                                <small class="text-muted">Part number cannot be changed</small>
                            </div>

                            <!-- Brand Selection -->
                            <div class="col-md-6">
                                <label for="BrandId" class="form-label fw-semibold">
                                    <i class="fas fa-trademark me-1"></i>Brand *
                                </label>
                                <select id="BrandId" name="BrandId" class="form-select" required>
                                    <option value="">Select Brand</option>
                                    @if (Model?.Brands != null && Model.Brands.Any())
                                    {
                                        @foreach (var brand in Model.Brands)
                                        {
                                            @if (Model.BrandId.ToString() == brand.Value)
                                            {
                                                <option value="@brand.Value" selected="selected">@brand.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@brand.Value">@brand.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Category Selection -->
                            <div class="col-md-6">
                                <label for="CategoryId" class="form-label fw-semibold">
                                    <i class="fas fa-tags me-1"></i>Category *
                                </label>
                                <select id="CategoryId" name="CategoryId" class="form-select" required>
                                    <option value="">Select Category</option>
                                    @if (Model?.Categories != null && Model.Categories.Any())
                                    {
                                        @foreach (var category in Model.Categories)
                                        {
                                            @if (Model.CategoryId.ToString() == category.Value)
                                            {
                                                <option value="@category.Value" selected="selected">@category.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@category.Value">@category.Text</option>
                                            }
                                        }
                                    }
                                </select>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Price -->
                            <div class="col-md-6">
                                <label for="Price" class="form-label fw-semibold">
                                    <i class="fas fa-dollar-sign me-1"></i>Price (USD) *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input id="Price" name="Price" type="number" class="form-control"
                                           value="@Model.Price" step="0.01" min="0" required>
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Stock Quantity -->
                            <div class="col-md-6">
                                <label for="StockQuantity" class="form-label fw-semibold">
                                    <i class="fas fa-warehouse me-1"></i>Stock Quantity *
                                </label>
                                <input id="StockQuantity" name="StockQuantity" type="number" class="form-control"
                                       value="@Model.StockQuantity" min="0" required>
                                <div class="invalid-feedback"></div>
                            </div>

                            <!-- Compatibility -->
                            <div class="col-12">
                                <label for="Compatibility" class="form-label fw-semibold">
                                    <i class="fas fa-car me-1"></i>Compatibility
                                </label>
                                <textarea id="Compatibility" name="Compatibility" class="form-control" rows="3">@Model.Compatibility</textarea>
                                <div class="invalid-feedback"></div>
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Specify which car models this part is compatible with
                                </div>
                            </div>

                            <!-- Description -->
                            <div class="col-12">
                                <label for="Description" class="form-label fw-semibold">
                                    <i class="fas fa-align-left me-1"></i>Description
                                </label>
                                <textarea id="Description" name="Description" class="form-control" rows="4">@Model.Description</textarea>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Current Image -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-transparent border-0">
                        <h6 class="card-title fw-bold mb-0">
                            <i class="fas fa-camera me-2 text-info"></i>Part Image
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <div class="current-image mb-3">
                                <img src="@Model.ImageUrl" alt="@Model.PartName" class="img-fluid rounded mb-2" style="max-height: 200px; width: 100%; object-fit: cover;">
                                <small class="text-muted d-block">Current Image</small>
                            </div>
                        }

                        <div class="mb-3">
                            <label for="ImageUrl" class="form-label fw-semibold">Image URL</label>
                            <input id="ImageUrl" name="ImageUrl" type="url" class="form-control"
                                   value="@Model.ImageUrl" placeholder="https://example.com/part-image.jpg">
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Enter a valid image URL (JPG, PNG, WebP formats)
                            </div>
                            <div class="invalid-feedback"></div>
                        </div>

                        <!-- Image Preview -->
                        <div id="imagePreview" style="display: none;">
                            <div class="mb-2">
                                <img id="previewImg" src="" alt="Preview" class="img-fluid rounded" style="max-height: 200px; width: 100%; object-fit: cover;">
                            </div>
                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearImagePreview()">
                                <i class="fas fa-times me-1"></i>Clear Preview
                            </button>
                        </div>

                        <!-- Preview Button -->
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="previewImage()">
                            <i class="fas fa-eye me-1"></i>Preview New Image
                        </button>
                    </div>
                </div>

                <!-- Status & Availability -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-transparent border-0">
                        <h6 class="card-title fw-bold mb-0">
                            <i class="fas fa-toggle-on me-2 text-success"></i>Status & Availability
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="form-check form-switch mb-3">
                            @if (Model.IsAvailable)
                            {
                                <input id="IsAvailable" name="IsAvailable" class="form-check-input" type="checkbox"
                                       value="true" checked="checked">
                            }
                            else
                            {
                                <input id="IsAvailable" name="IsAvailable" class="form-check-input" type="checkbox"
                                       value="true">
                            }
                            <label class="form-check-label fw-semibold" for="IsAvailable">
                                Available for Sale
                            </label>
                        </div>

                        <div class="status-info">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Current Status:</span>
                                <span class="badge bg-@(Model.IsAvailable && Model.StockQuantity > 0 ? "success" : "secondary")">
                                    @(Model.IsAvailable && Model.StockQuantity > 0 ? "Available" : "Not Available")
                                </span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Stock Level:</span>
                                <span class="badge bg-@(Model.StockQuantity > 0 ? "success" : "danger")">
                                    @Model.StockQuantity units
                                </span>
                            </div>
                        </div>

                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Note:</strong> Part visibility to customers depends on availability status and stock quantity.
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0">
                        <h6 class="card-title fw-bold mb-0">
                            <i class="fas fa-bolt me-2 text-warning"></i>Quick Actions
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="resetForm()">
                                <i class="fas fa-undo me-1"></i>Reset Changes
                            </button>
                            <button type="button" class="btn btn-outline-danger btn-sm" onclick="confirmDeletePart()">
                                <i class="fas fa-trash me-1"></i>Delete Part
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Form Actions -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="d-flex justify-content-end gap-2">
                    <a href="@Url.Action("ManageCarParts", "Admin")" class="btn btn-outline-secondary">
                        <i class="fas fa-times me-1"></i>Cancel
                    </a>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <i class="fas fa-save me-1"></i>Update Part
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    .card {
        border-radius: 12px;
    }

    .btn {
        border-radius: 8px;
    }

    .alert {
        border-radius: 8px;
    }

    .form-label.fw-semibold {
        color: #495057;
    }

    .status-info {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1rem;
    }

    .is-invalid {
        border-color: #dc3545;
    }

    .is-valid {
        border-color: #198754;
    }

    @@media (max-width: 768px) {
        .edit-car-part-container

    {
        padding: 0 10px;
    }

    }
</style>

@section Scripts {
    @Html.Partial("_ValidationScriptsPartial")

    <script>
        // Store original form data for reset functionality
        var originalFormData;

        $(document).ready(function() {
            // Store original form data
            originalFormData = collectFormData();

            // Form submission
            $('#editCarPartForm').on('submit', function(e) {
                e.preventDefault();

                // Clear previous validation errors
                clearValidationErrors();

                // Collect form data
                var formData = collectFormData();

                // Validate form data
                if (!validateFormData(formData)) {
                    return;
                }

                // Show loading state
                showLoadingState();

                // Get anti-forgery token
                var token = $('input[name="__RequestVerificationToken"]').val();

                // Submit via AJAX
                $.ajax({
                    url: '@Url.Action("EditCarPart", "Admin")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function(response) {
                        hideLoadingState();

                        if (response.success) {
                            showMessage('success', 'Car part updated successfully!');
                            // Update original form data
                            originalFormData = collectFormData();
                        } else {
                            showMessage('error', response.message || 'Failed to update car part.');
                            if (response.errors) {
                                displayValidationErrors(response.errors);
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        hideLoadingState();
                        console.error('Error:', error);
                        showMessage('error', 'An error occurred while updating the car part.');
                    }
                });
            });

            // Image URL preview
            $('#ImageUrl').on('blur', function() {
                if ($(this).val() && $(this).val() !== '@Model.ImageUrl') {
                    previewImage();
                }
            });
        });

        function collectFormData() {
            return {
                CarPartId: parseInt($('#CarPartId').val()),
                BrandId: parseInt($('#BrandId').val()) || 0,
                CategoryId: parseInt($('#CategoryId').val()) || 0,
                PartName: $('#PartName').val().trim(),
                PartNumber: $('#PartNumber').val().trim(),
                Price: parseFloat($('#Price').val()) || 0,
                StockQuantity: parseInt($('#StockQuantity').val()) || 0,
                Compatibility: $('#Compatibility').val().trim(),
                Description: $('#Description').val().trim(),
                ImageUrl: $('#ImageUrl').val().trim(),
                IsAvailable: $('#IsAvailable').is(':checked')
            };
        }

        function validateFormData(data) {
            var isValid = true;

            // Required field validations
            if (!data.BrandId) {
                showFieldError('BrandId', 'Please select a brand');
                isValid = false;
            }

            if (!data.CategoryId) {
                showFieldError('CategoryId', 'Please select a category');
                isValid = false;
            }

            if (!data.PartName) {
                showFieldError('PartName', 'Part name is required');
                isValid = false;
            }

            if (!data.PartNumber) {
                showFieldError('PartNumber', 'Part number is required');
                isValid = false;
            }

            if (!data.Price || data.Price <= 0) {
                showFieldError('Price', 'Please enter a valid price');
                isValid = false;
            }

            if (data.StockQuantity === undefined || data.StockQuantity < 0) {
                showFieldError('StockQuantity', 'Please enter a valid stock quantity');
                isValid = false;
            }

            return isValid;
        }

        function showFieldError(fieldId, message) {
            var field = $('#' + fieldId);
            field.addClass('is-invalid');
            field.siblings('.invalid-feedback').text(message);
        }

        function clearValidationErrors() {
            $('.form-control, .form-select').removeClass('is-invalid is-valid');
            $('.invalid-feedback').text('');
        }

        function displayValidationErrors(errors) {
            errors.forEach(function(error) {
                showMessage('warning', error);
            });
        }

        function showLoadingState() {
            var submitBtn = $('#submitBtn');
            submitBtn.prop('disabled', true);
            submitBtn.html('<i class="fas fa-spinner fa-spin me-1"></i>Updating...');
        }

        function hideLoadingState() {
            var submitBtn = $('#submitBtn');
            submitBtn.prop('disabled', false);
            submitBtn.html('<i class="fas fa-save me-1"></i>Update Part');
        }

        function showMessage(type, message) {
            var alertClass = 'alert-success';
            var iconClass = 'fas fa-check-circle';

            if (type === 'error') {
                alertClass = 'alert-danger';
                iconClass = 'fas fa-exclamation-circle';
            } else if (type === 'warning') {
                alertClass = 'alert-warning';
                iconClass = 'fas fa-exclamation-triangle';
            }

            $('#alertMessage').removeClass('alert-success alert-danger alert-warning')
                              .addClass(alertClass);
            $('#alertIcon').removeClass().addClass(iconClass);
            $('#alertText').text(message);
            $('#messageContainer').show();

            // Auto-hide success messages
            if (type === 'success') {
                setTimeout(function() {
                    $('#messageContainer').fadeOut();
                }, 3000);
            }
        }

        function previewImage() {
            var imageUrl = $('#ImageUrl').val().trim();

            if (!imageUrl) {
                clearImagePreview();
                return;
            }

            // Simple URL validation
            if (!isValidImageUrl(imageUrl)) {
                showFieldError('ImageUrl', 'Please enter a valid image URL');
                return;
            }

            $('#previewImg').attr('src', imageUrl);
            $('#imagePreview').show();

            // Handle image load error
            $('#previewImg').on('error', function() {
                showFieldError('ImageUrl', 'Unable to load image from this URL');
                clearImagePreview();
            });
        }

        function clearImagePreview() {
            $('#imagePreview').hide();
            $('#previewImg').attr('src', '');
            $('#ImageUrl').removeClass('is-invalid');
        }

        function isValidImageUrl(url) {
            try {
                new URL(url);
                return /\.(jpg|jpeg|png|gif|bmp|webp)$/i.test(url);
            } catch {
                return false;
            }
        }

        function resetForm() {
            if (confirm('This will reset all changes back to the original values. Continue?')) {
                // Reset all form fields to original values
                $('#BrandId').val(originalFormData.BrandId);
                $('#CategoryId').val(originalFormData.CategoryId);
                $('#PartName').val(originalFormData.PartName);
                $('#PartNumber').val(originalFormData.PartNumber);
                $('#Price').val(originalFormData.Price);
                $('#StockQuantity').val(originalFormData.StockQuantity);
                $('#Compatibility').val(originalFormData.Compatibility);
                $('#Description').val(originalFormData.Description);
                $('#ImageUrl').val(originalFormData.ImageUrl);
                $('#IsAvailable').prop('checked', originalFormData.IsAvailable);

                clearValidationErrors();
                clearImagePreview();
                showMessage('info', 'Form reset to original values.');
            }
        }

        function confirmDeletePart() {
            if (confirm('Are you sure you want to delete this car part? This action cannot be undone.')) {
                deletePart();
            }
        }

        function deletePart() {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '@Url.Action("DeleteCarPart", "Admin")',
                type: 'POST',
                data: {
                    id: @Model.CarPartId,
                    __RequestVerificationToken: token
                },
                success: function(response) {
                    if (response.success) {
                        showMessage('success', 'Car part deleted successfully!');
                        setTimeout(function() {
                            window.location.href = '@Url.Action("ManageCarParts", "Admin")';
                        }, 1500);
                    } else {
                        showMessage('error', response.message || 'Failed to delete car part.');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                    showMessage('error', 'An error occurred while deleting the car part.');
                }
            });
        }
    </script>
}