@model CustomerListViewModel
@{
    ViewData["Title"] = "Manage Customers";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="manage-customers-container">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 text-dark fw-bold">
                        <i class="fas fa-users me-2 text-info"></i>Manage Customers
                    </h1>
                    <p class="text-muted mb-0">Total: @Model.TotalCustomers customers | Active: @Model.ActiveCustomers | New this month: @Model.NewCustomersThisMonth</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#customerStatsModal">
                        <i class="fas fa-chart-bar me-1"></i>Statistics
                    </button>
                    <button class="btn btn-outline-success" onclick="exportCustomers()">
                        <i class="fas fa-download me-1"></i>Export
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-lg-4">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" class="form-control" name="search" 
                                       placeholder="Search by name, email, phone..." 
                                       value="@Context.Request.Query["search"]">
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <select class="form-select" name="status">
                                <option value="">All Status</option>
                                @{
                                    var statusActive = Context.Request.Query["status"] == "active";
                                    var statusInactive = Context.Request.Query["status"] == "inactive";
                                }
                                <option value="active" selected="@statusActive">Active</option>
                                <option value="inactive" selected="@statusInactive">Inactive</option>
                            </select>
                        </div>
                        <div class="col-lg-2">
                            <select class="form-select" name="city">
                                <option value="">All Cities</option>
                                @if (ViewBag.Cities != null)
                                {
                                    @foreach (var city in ViewBag.Cities as List<string>)
                                    {
                                        var isCitySelected = Context.Request.Query["city"] == city;
                                        <option value="@city" selected="@isCitySelected">
                                            @city
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-lg-2">
                            <select class="form-select" name="sortBy">
                                @{
                                    var currentSort = Context.Request.Query["sortBy"].ToString();
                                }
                                <option value="name" selected="@(currentSort == "name" || string.IsNullOrEmpty(currentSort))">Name</option>
                                <option value="email" selected="@(currentSort == "email")">Email</option>
                                <option value="date" selected="@(currentSort == "date")">Registration Date</option>
                                <option value="orders" selected="@(currentSort == "orders")">Total Orders</option>
                            </select>
                        </div>
                        <div class="col-lg-2">
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-search me-1"></i>Search
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Customers Table -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 d-flex justify-content-between align-items-center">
                    <h6 class="card-title fw-bold mb-0">Customer Directory</h6>
                    <div class="d-flex gap-2">
                        <div class="btn-group btn-group-sm" role="group">
                            <input type="radio" class="btn-check" name="viewMode" id="tableView" autocomplete="off" checked>
                            <label class="btn btn-outline-secondary" for="tableView">
                                <i class="fas fa-table"></i>
                            </label>
                            <input type="radio" class="btn-check" name="viewMode" id="cardView" autocomplete="off">
                            <label class="btn btn-outline-secondary" for="cardView">
                                <i class="fas fa-th-large"></i>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.Customers.Any())
                    {
                        <!-- Table View -->
                        <div id="tableViewContainer">
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th width="50">
                                                <input type="checkbox" id="selectAllCustomers" class="form-check-input">
                                            </th>
                                            <th>Customer</th>
                                            <th>Contact Info</th>
                                            <th>Location</th>
                                            <th>Orders</th>
                                            <th>Total Spent</th>
                                            <th>Status</th>
                                            <th>Registered</th>
                                            <th width="120">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var customer in Model.Customers)
                                        {
                                            <tr>
                                                <td>
                                                    <input type="checkbox" class="form-check-input customer-checkbox" value="@customer.UserId">
                                                </td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <div class="customer-avatar me-2">
                                                            @customer.FirstName.Substring(0, 1).ToUpper()@customer.LastName.Substring(0, 1).ToUpper()
                                                        </div>
                                                        <div>
                                                            <h6 class="fw-bold mb-0">@customer.FirstName @customer.LastName</h6>
                                                            <small class="text-muted">ID: #@customer.UserId</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div>
                                                        <div class="mb-1">
                                                            <i class="fas fa-envelope me-1 text-muted"></i>
                                                            <a href="mailto:@customer.Email" class="text-decoration-none">@customer.Email</a>
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(customer.PhoneNumber))
                                                        {
                                                            <div>
                                                                <i class="fas fa-phone me-1 text-muted"></i>
                                                                <a href="tel:@customer.PhoneNumber" class="text-decoration-none">@customer.PhoneNumber</a>
                                                            </div>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(customer.City) || !string.IsNullOrEmpty(customer.Country))
                                                    {
                                                        <div>
                                                            @if (!string.IsNullOrEmpty(customer.City))
                                                            {
                                                                <div>@customer.City</div>
                                                            }
                                                            @if (!string.IsNullOrEmpty(customer.Country))
                                                            {
                                                                <small class="text-muted">@customer.Country</small>
                                                            }
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">Not specified</span>
                                                    }
                                                </td>
                                                <td>
                                                    <span class="badge bg-primary">@customer.TotalOrders orders</span>
                                                </td>
                                                <td>
                                                    <span class="fw-bold text-success">$@customer.TotalSpent.ToString("N2")</span>
                                                </td>
                                                <td>
                                                    @if (customer.IsActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Inactive</span>
                                                    }
                                                </td>
                                                <td>
                                                    <small class="text-muted">@customer.CreatedAt.ToString("MMM dd, yyyy")</small>
                                                </td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" 
                                                                data-bs-toggle="dropdown">
                                                            <i class="fas fa-ellipsis-v"></i>
                                                        </button>
                                                        <ul class="dropdown-menu">
                                                            <li>
                                                                <a class="dropdown-item" href="javascript:void(0)" 
                                                                   onclick="viewCustomerDetails(@customer.UserId)">
                                                                    <i class="fas fa-eye me-2"></i>View Details
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a class="dropdown-item" href="@Url.Action("ManageOrders", "Admin", new { customerId = customer.UserId })">
                                                                    <i class="fas fa-shopping-cart me-2"></i>View Orders
                                                                </a>
                                                            </li>
                                                            <li><hr class="dropdown-divider"></li>
                                                            <li>
                                                                <a class="dropdown-item" href="javascript:void(0)" 
                                                                   onclick="toggleCustomerStatus(@customer.UserId, @customer.IsActive.ToString().ToLower())">
                                                                    <i class="fas fa-toggle-@(customer.IsActive ? "off" : "on") me-2"></i>
                                                                    @(customer.IsActive ? "Deactivate" : "Activate")
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a class="dropdown-item text-danger" href="javascript:void(0)" 
                                                                   onclick="confirmDeleteCustomer(@customer.UserId, '@customer.FirstName @customer.LastName')">
                                                                    <i class="fas fa-trash me-2"></i>Delete
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <!-- Card View (Hidden by default) -->
                        <div id="cardViewContainer" class="p-3" style="display: none;">
                            <div class="row g-3">
                                @foreach (var customer in Model.Customers)
                                {
                                    <div class="col-xl-4 col-lg-6">
                                        <div class="card customer-card h-100">
                                            <div class="card-body">
                                                <div class="d-flex align-items-start justify-content-between mb-3">
                                                    <div class="d-flex align-items-center">
                                                        <div class="customer-avatar-large me-3">
                                                            @customer.FirstName.Substring(0, 1).ToUpper()@customer.LastName.Substring(0, 1).ToUpper()
                                                        </div>
                                                        <div>
                                                            <h6 class="fw-bold mb-1">@customer.FirstName @customer.LastName</h6>
                                                            <small class="text-muted">Customer #@customer.UserId</small>
                                                        </div>
                                                    </div>
                                                    <span class="badge bg-@(customer.IsActive ? "success" : "secondary")">
                                                        @(customer.IsActive ? "Active" : "Inactive")
                                                    </span>
                                                </div>
                                                
                                                <div class="customer-info mb-3">
                                                    <div class="mb-2">
                                                        <i class="fas fa-envelope me-2 text-muted"></i>
                                                        <span class="small">@customer.Email</span>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(customer.PhoneNumber))
                                                    {
                                                        <div class="mb-2">
                                                            <i class="fas fa-phone me-2 text-muted"></i>
                                                            <span class="small">@customer.PhoneNumber</span>
                                                        </div>
                                                    }
                                                    @if (!string.IsNullOrEmpty(customer.City))
                                                    {
                                                        <div class="mb-2">
                                                            <i class="fas fa-map-marker-alt me-2 text-muted"></i>
                                                            <span class="small">@customer.City@(!string.IsNullOrEmpty(customer.Country) ? $", {customer.Country}" : "")</span>
                                                        </div>
                                                    }
                                                </div>
                                                
                                                <div class="customer-stats row text-center mb-3">
                                                    <div class="col-6">
                                                        <div class="fw-bold text-primary">@customer.TotalOrders</div>
                                                        <small class="text-muted">Orders</small>
                                                    </div>
                                                    <div class="col-6">
                                                        <div class="fw-bold text-success">$@customer.TotalSpent.ToString("N0")</div>
                                                        <small class="text-muted">Spent</small>
                                                    </div>
                                                </div>
                                                
                                                <div class="d-flex justify-content-between">
                                                    <small class="text-muted">
                                                        Joined @customer.CreatedAt.ToString("MMM yyyy")
                                                    </small>
                                                    <div class="btn-group btn-group-sm">
                                                        <button class="btn btn-outline-primary" onclick="viewCustomerDetails(@customer.UserId)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-outline-info" onclick="viewCustomerOrders(@customer.UserId)">
                                                            <i class="fas fa-shopping-cart"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted">No customers found</h5>
                            <p class="text-muted">No customers match your search criteria.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.Customers.Any())
    {
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Customers pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<!-- Customer Details Modal -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="customerDetailsContent">
                <!-- Customer details will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCustomerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <i class="fas fa-exclamation-triangle fa-3x text-warning"></i>
                </div>
                <p>Are you sure you want to delete customer <strong id="customerNameToDelete"></strong>?</p>
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Warning:</strong> This will also delete all associated orders and data. This action cannot be undone.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="deleteCustomer()">
                    <i class="fas fa-trash me-1"></i>Delete Customer
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .customer-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #0056b3);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 0.875rem;
    }
    
    .customer-avatar-large {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #0056b3);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1rem;
    }
    
    .customer-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        border: 1px solid #e9ecef;
    }
    
    .customer-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .customer-info {
        border-left: 3px solid #e9ecef;
        padding-left: 1rem;
    }
    
    .customer-stats {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 0.75rem;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .badge {
        font-size: 0.75rem;
    }
    
    @@media (max-width: 768px) {
        .customer-avatar {
            width: 35px;
            height: 35px;
            font-size: 0.75rem;
        }
        
        .table-responsive {
            font-size: 0.875rem;
        }
    }
</style>

<script>
    let customerToDelete = null;
    
    // View mode toggle
    document.getElementById('tableView').addEventListener('change', function() {
        if (this.checked) {
            document.getElementById('tableViewContainer').style.display = 'block';
            document.getElementById('cardViewContainer').style.display = 'none';
        }
    });
    
    document.getElementById('cardView').addEventListener('change', function() {
        if (this.checked) {
            document.getElementById('tableViewContainer').style.display = 'none';
            document.getElementById('cardViewContainer').style.display = 'block';
        }
    });
    
    function viewCustomerDetails(customerId) {
        fetch(`/Admin/GetCustomerDetails/${customerId}`)
            .then(response => response.text())
            .then(html => {
                document.getElementById('customerDetailsContent').innerHTML = html;
                const modal = new bootstrap.Modal(document.getElementById('customerDetailsModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error loading customer details.');
            });
    }
    
    function viewCustomerOrders(customerId) {
        window.location.href = `/Admin/ManageOrders?customerId=${customerId}`;
    }
    
    function toggleCustomerStatus(customerId, isActive) {
        const action = isActive ? 'deactivate' : 'activate';
        
        if (confirm(`Are you sure you want to ${action} this customer?`)) {
            fetch(`/Admin/ToggleCustomerStatus/${customerId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error updating customer status: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating customer status.');
            });
        }
    }
    
    function confirmDeleteCustomer(customerId, customerName) {
        customerToDelete = customerId;
        document.getElementById('customerNameToDelete').textContent = customerName;
        const modal = new bootstrap.Modal(document.getElementById('deleteCustomerModal'));
        modal.show();
    }
    
    function deleteCustomer() {
        if (customerToDelete) {
            fetch(`/Admin/DeleteCustomer/${customerToDelete}`, {
                method: 'DELETE',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error deleting customer: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the customer.');
            });
        }
        
        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteCustomerModal'));
        modal.hide();
    }
    
    function exportCustomers() {
        const params = new URLSearchParams(window.location.search);
        params.set('export', 'excel');
        window.open(`/Admin/ExportCustomers?${params.toString()}`, '_blank');
    }
</script>